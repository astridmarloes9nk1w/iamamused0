
/*! @brief 纤程操作对象，此对象不可直接创建
 * 
 * Function.start 或 coroutine.start 创建纤程后，将返回此对象，用于纤程处理和纤程间通信。
 * 纤程主函数可以通过 this 访问本纤程对象，也可通过 coroutine.current 获取当前纤程。
 * @code
 * function func(v1)
 * {
 *   print(v1 + this.v);
 * }
 *
 * var fb = func.start(100);
 * fb.v = 123;
 * fb.join();
 * @endcode
 */
class Fiber : Event
{
	/*! 等待纤程结束 */
	join();
	readonly Function func;
};
