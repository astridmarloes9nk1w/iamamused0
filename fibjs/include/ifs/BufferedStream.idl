
/*! @brief 缓存读取对象
 *
 * BufferedReader 对象用于对二进制流对象数据进行缓存，并提供文本读取能力，仅支持 utf-8 格式转换。创建方法：
 * @code
 * var reader = new io.BufferedStream(stream);
 * @endcode
 */
class BufferedStream : Stream
{
	/*! @brief BufferedStream 构造函数
	 *  @param stm BufferedStream 的二进制基础流对象
	 */
	BufferedStream(Stream stm);

	/*! @brief 读取指定字符的文本
	 * @param size 指定读取的文本字符个数
	 * @return 返回读取的文本字符串
	 */
	String readText(Integer size) async;

	/*! @brief 读取一行文本，行结尾标识基于 EOL 属性的设置，缺省时，posix:\"\\n\"；windows:\"\\r\\n\"
	 * @return 返回读取的文本字符串
	 */
	String readLine() async;

	/*! @brief 读取一个文本字符串，以指定的字节为结尾
	 * @param mk 指定结尾的字符串
	 * @return 返回读取的文本字符串
	 */
	String readUntil(String mk) async;

	/*! @brief 写入一个字符串
	 * @param txt 指定写入的字符串
	 */
	writeText(String txt) async;

	/*! @brief 写入一个字符串，并写入换行符
	 * @param txt 指定写入的字符串
	 */
	writeLine(String txt) async;

	/*! @brief 查询和设置行结尾标识，缺省时，posix:\"\\n\"；windows:\"\\r\\n\"	 */
	String EOL;
};
