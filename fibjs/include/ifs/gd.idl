
/*! @brief 图像文件处理模块

 基础模块。可用于创建和操作图像文件，引用方式：
 \code
 var gd = require('gd');
 \endcode
 */
class gd : module
{
	/*! @brief 图像格式常量，标示当前图像来源为未知 */
	const Integer NONE = 0;

	/*! @brief 图像格式常量，标示当前图像来源为 jpeg 格式数据 */
	const Integer JPEG = 1;

	/*! @brief 图像格式常量，标示当前图像来源为 gif 格式数据 */
	const Integer GIF = 2;

	/*! @brief 图像格式常量，标示当前图像来源为 png 格式数据 */
	const Integer PNG = 3;

	/*! @brief 图像格式常量，标示当前图像来源为 tiff 格式数据 */
	const Integer TIFF = 4;

	/*! @brief 图像格式常量，标示当前图像来源为 bmp 格式数据 */
	const Integer BMP = 5;

	/*! @brief 图像格式常量，标示当前图像来源为 gd 格式数据 */
	const Integer GD = 6;

	/*! @brief 图像格式常量，标示当前图像来源为 gd2 格式数据 */
	const Integer GD2 = 7;

	/*! @brief 图像类型常量，标示当前图像为真彩色图像 */
	const Integer TRUECOLOR = 0;

	/*! @brief 图像类型常量，标示当前图像为调色板图像 */
	const Integer PALETTE = 1;

	/*! @brief 扇形绘制样式，绘制一条连接开始和结束点的圆弧 */
	const Integer ARC = 0;

	/*! @brief 扇形绘制样式，绘制一条连接原点，开始和结束点的直线 */
	const Integer CHORD = 1;

	/*! @brief 扇形绘制样式，绘制不填充的扇形 */
	const Integer NOFILL = 2;

	/*! @brief 扇形绘制样式，绘制一条连接起点和终点的弧和连接原点的直线 */
	const Integer EDGED = 4;

	/*! @brief 镜像方向，横向做镜像处理 */
	const Integer HORIZONTAL = 1;

	/*! @brief 镜像方向，纵向做镜像处理 */
	const Integer VERTICAL = 2;

	/*! @brief 镜像方向，横向和纵向都做镜像处理 */
	const Integer BOTH = 3;

	/*! @brief 旋转方向，向左旋转 */
	const Integer LEFT = 1;

	/*! @brief 旋转方向，向右旋转 */
	const Integer RIGHT = 2;


	/*! @brief 创建一个新图像
	 @param width 指定图像宽度
	 @param height 指定图像高度
	 @param color 指定图像类型，允许值为 gd.TRUECOLOR 或 gd.PALETTE
	 @return 返回创建成功的图像对象
	 */
	static Image create(Integer width, Integer height, Integer color = gd.TRUECOLOR) async;

	/*! @brief 从格式数据中解码图像
	 @param data 给定解码的图像数据
	 @return 返回解码成功的图像对象
	 */
	static Image load(Buffer data) async;

	/*! @brief 从流对象中解码图像
	 @param stm 给定图像数据所在的流对象
	 @return 返回解码成功的图像对象
	 */
	static Image load(SeekableStream stm) async;

	/*! @brief 从指定文件中解码图像
	 @param fname 指定文件名
	 @return 返回解码成功的图像对象
	 */
	static Image load(String fname) async;
};
