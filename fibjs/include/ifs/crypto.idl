
/*! @brief 加密算法模块

 使用方法：
 @code
 var crypto = require('crypto');
 @endcode
 */
class crypto : module
{
	/*! @brief 指定对称加密算法 AES，支持 128, 192, 256 位 key，分组密码工作模式支持 ECB, CBC, CFB128, CTR, GCM */
    const Integer AES = 1;

	/*! @brief 指定对称加密算法 CAMELLIA，支持 128, 192, 256 位 key，分组密码工作模式支持 ECB, CBC, CFB128, CTR, GCM */
    const Integer CAMELLIA = 2;

	/*! @brief 指定对称加密算法 DES，支持 64 位 key，分组密码工作模式支持 ECB, CBC */
    const Integer DES = 3;

	/*! @brief 指定对称加密算法 DES-EDE，支持 128 位 key，分组密码工作模式支持 ECB, CBC */
    const Integer DES_EDE = 4;

	/*! @brief 指定对称加密算法 DES-EDE3，支持 192 位 key，分组密码工作模式支持 ECB, CBC */
    const Integer DES_EDE3 = 5;

	/*! @brief 指定对称加密算法 BLOWFISH，支持 192 位 key，分组密码工作模式支持 ECB, CBC, CFB64, CTR */
    const Integer BLOWFISH = 6;

	/*! @brief 指定对称加密算法 ARC4，支持 40, 56, 64, 128 位 key */
    const Integer ARC4 = 7;

    /*! @brief 指定流密码模式 */
    const Integer STREAM = 0;

    /*! @brief 指定分组密码工作模式支持 ECB */
    const Integer ECB = 1;

    /*! @brief 指定分组密码工作模式支持 CBC */
    const Integer CBC = 2;

    /*! @brief 指定分组密码工作模式支持 CFB64 */
    const Integer CFB64 = 3;

    /*! @brief 指定分组密码工作模式支持 CFB128 */
    const Integer CFB128 = 4;

    /*! @brief 指定分组密码工作模式支持 OFB */
    const Integer OFB = 5;

    /*! @brief 指定分组密码工作模式支持 CTR */
    const Integer CTR = 6;

    /*! @brief 指定分组密码工作模式支持 GCM */
    const Integer GCM = 7;

    /*! @brief 指定填充模式为 PKCS7 */
    const Integer PKCS7 = 0;

    /*! @brief 指定填充模式为 ONE_AND_ZEROS */
    const Integer ONE_AND_ZEROS = 1;

    /*! @brief 指定填充模式为 ZEROS_AND_LEN */
    const Integer ZEROS_AND_LEN = 2;

    /*! @brief 指定填充模式为 ZEROS */
    const Integer ZEROS = 3;

    /*! @brief 指定填充模式为 NOPADDING */
    const Integer NOPADDING = 4;

    /*! @brief Cipher 构造函数，参见 Cipher */
    static Cipher new Cipher();

    /*! @brief PKey 构造函数，参见 PKey */
    static PKey new PKey();

	/*! @brief 生成指定尺寸的随机数，使用 havege 生成器
	 @param size 指定生成的随机数尺寸
	 @return 返回生成的随机数
	 */
    static Buffer randomBytes(Integer size) async;

	/*! @brief 生成指定尺寸的伪随机数，使用 entropy 生成器
	 @param size 指定生成的随机数尺寸
	 @return 返回生成的随机数
	 */
    static Buffer pseudoRandomBytes(Integer size) async;
};
