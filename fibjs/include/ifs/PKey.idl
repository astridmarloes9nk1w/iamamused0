
/*! @brief 不对称加密算法对象

 PKey 对象属于 crypto 模块，创建：
 @code
 var k = new crypto.PKey();
 @endcode
 */
class PKey: object
{
    /*! @brief PKey 构造函数 */
    PKey();

    /*! @brief 生成一个 RSA 私钥 
     @param size 指定 RSA 密钥长度，bit 为单位
    */
    genRsaKey(Integer size) async;

    /*! @brief 生成一个 EC 私钥
     @param curve 指定预置椭圆曲线，可选值为："secp521r1", "brainpoolP512r1", "secp384r1", "brainpoolP384r1", "secp256r1", "secp256k1", "brainpoolP256r1", "secp224r1", "secp224k1", "secp192r1", "secp192k1"
    */
    genEcKey(String curve = "secp521r1") async;

    /*! @brief 查询当前密钥是否为私钥
     @return 为 True 表示为私钥
    */
    Boolean isPrivate();

    /*! @brief 返回当前密钥的公钥
     @return 当前密钥的公钥
    */
    PKey publicKey();

    /*! @brief 加载一个 DER 格式的密钥
     @param pemKey DER 格式的密钥
     @param password 解密密码
    */
    import(Buffer DerKey, String password = "");

    /*! @brief 加载一个 PEM 格式的密钥
     @param pemKey PEM 格式的密钥
     @param password 解密密码
    */
    import(String pemKey, String password = "");

    /*! @brief 返回当前 key 的 PEM 格式编码
     @return 当前 key 的 PEM 格式编码
    */
    String exportPem();

    /*! @brief 返回当前 key 的 DER 格式编码
     @return 当前 key 的 DER 格式编码
    */
    Buffer exportDer();
};
