#!/bin/bash

. ../../vender/scripts/get_env.sh --source-only

get_build_env "$@";

FIBJS_PATH=`pwd`
OUT_PATH=${FIBJS_PATH}/../../out
BIN_ROOT=${FIBJS_PATH}/../../bin
BIN_PATH=${FIBJS_PATH}/../../bin/${TARGET_OS}_${TARGET_ARCH}_${BUILD_TYPE}

if [ ${BUILD_TYPE} = 'clean' ]; then
	if [ -e "${OUT_PATH}" ]; then
		rm -rf ${OUT_PATH}
	fi

	if [ -e "${BIN_ROOT}" ]; then
		rm -rf ${BIN_ROOT}
	fi

	exit 0
fi

if [ ! -e "${OUT_PATH}" ]; then
	mkdir "${OUT_PATH}"
fi

OUT_PATH=${OUT_PATH}/${TARGET_OS}_${TARGET_ARCH}_${BUILD_TYPE}
if [ ! -e ${OUT_PATH} ]; then
	mkdir ${OUT_PATH}
fi

OUT_PATH=${OUT_PATH}/program
if [ ! -e ${OUT_PATH} ]; then
	mkdir ${OUT_PATH}
fi

cd ${OUT_PATH}
cmake \
	-DCMAKE_C_COMPILER=clang \
	-DCMAKE_CXX_COMPILER=clang++ \
	-DARCH=${TARGET_ARCH} \
	-DBUILD_TYPE=${BUILD_TYPE} \
	${FIBJS_PATH} > CMake.log

if [ $? != 0 ]; then
	exit 1
fi

if [ ! "$BUILD_JOBS" = "" ]; then
	sh -c "${BUILD_VERBOSE} make -j${BUILD_JOBS}"
else
	sh -c "${BUILD_VERBOSE} make"
fi
if [ $? != 0 ]; then
	exit 1
fi

if [ "${TARGET_OS}" != "Windows" ] && [ "${BUILD_TYPE}" = "release" ]; then
	cd "${BIN_PATH}"
	cp "${FIBJS_PATH}/installer.txt" "installer.sh"
	tar -zcf fibjs.tar.gz fibjs
	echo '[100%] Built target fibjs.tar.gz'
	cat fibjs.tar.gz >> installer.sh
	chmod 777 installer.sh
	echo '[100%] Built target install.sh'

	if [ $TARGET_OS = "Linux" ]; then
		echo ''
		echo '==== GLIBC ===='
		${BUILD_PREFIX}objdump fibjs -p | grep GLIBCX*_[0-9.]* -o | sort | uniq
	fi

	if [ "${CI}" = "ci" ]; then
		xz -cz -T2 fibjs > fibjs.xz
		echo '[100%] Built target fibjs.xz'
	fi
fi

cd "${FIBJS_PATH}"