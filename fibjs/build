#!/bin/bash

. ../vender/scripts/get_env.sh --source-only

get_build_env "$@";

FIBJS_LIB_PATH=`pwd`
OUT_PATH=${FIBJS_LIB_PATH}/../out
BIN_ROOT=${FIBJS_LIB_PATH}/../bin
BIN_PATH=${FIBJS_LIB_PATH}/../bin/${TARGET_OS}_${TARGET_ARCH}_${BUILD_TYPE}

if [ ${BUILD_TYPE} = 'clean' ]; then
	if [ -e "${OUT_PATH}" ]; then
		rm -rf ${OUT_PATH}
	fi

	if [ -e "${BIN_ROOT}" ]; then
		rm -rf ${BIN_ROOT}
	fi

	exit 0
fi

if [ ! -e "${OUT_PATH}" ]; then
	mkdir "${OUT_PATH}"
fi

OUT_PATH=${OUT_PATH}/${TARGET_OS}_${TARGET_ARCH}_${BUILD_TYPE}
if [ ! -e ${OUT_PATH} ]; then
	print " ${OUT_PATH}"
	mkdir ${OUT_PATH}
fi

OUT_PATH=${OUT_PATH}/fibjs
if [ ! -e ${OUT_PATH} ]; then
	mkdir ${OUT_PATH}
fi

GIT_INFO=`git describe --tags --always`

cd ${OUT_PATH}
cmake \
	-DCMAKE_C_COMPILER=clang \
	-DCMAKE_CXX_COMPILER=clang++ \
	-DARCH=${TARGET_ARCH} \
	-DBUILD_TYPE=${BUILD_TYPE} \
	-DGIT_INFO=$GIT_INFO ${FIBJS_LIB_PATH} > CMake.log

if [ $? != 0 ]; then
	exit 1
fi

if [ ! "$BUILD_JOBS" = "" ]; then
	sh -c "${BUILD_VERBOSE} make -j${BUILD_JOBS}"
else
	sh -c "${BUILD_VERBOSE} make"
fi
if [ $? != 0 ]; then
	exit 1
fi

cd "${FIBJS_LIB_PATH}"