--- /Users/lion/Downloads/source/js/v8/src/arm/deoptimizer-arm.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm/deoptimizer-arm.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM
+
 #include "codegen.h"
 #include "deoptimizer.h"
 #include "full-codegen.h"
@@ -382,3 +384,5 @@
 #undef __
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm/lithium-arm.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm/lithium-arm.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM
+
 #include "lithium-allocator-inl.h"
 #include "arm/lithium-arm.h"
 #include "arm/lithium-codegen-arm.h"
@@ -2578,3 +2580,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm/lithium-codegen-arm.cc	2014-04-18 23:48:26.000000000 +0800
+++ src/arm/lithium-codegen-arm.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM
+
 #include "arm/lithium-codegen-arm.h"
 #include "arm/lithium-gap-resolver-arm.h"
 #include "code-stubs.h"
@@ -5871,3 +5873,5 @@
 #undef __
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm/lithium-gap-resolver-arm.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm/lithium-gap-resolver-arm.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM
+
 #include "arm/lithium-gap-resolver-arm.h"
 #include "arm/lithium-codegen-arm.h"
 
@@ -316,3 +318,5 @@
 #undef __
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm64/deoptimizer-arm64.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm64/deoptimizer-arm64.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM64
+
 #include "codegen.h"
 #include "deoptimizer.h"
 #include "full-codegen.h"
@@ -411,3 +413,5 @@
 #undef __
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm64/instrument-arm64.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm64/instrument-arm64.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "arm64/instrument-arm64.h"
 
+#if V8_TARGET_ARCH_ARM64
+
 namespace v8 {
 namespace internal {
 
@@ -616,3 +618,5 @@
 
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm64/lithium-arm64.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm64/lithium-arm64.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM64
+
 #include "lithium-allocator-inl.h"
 #include "arm64/lithium-arm64.h"
 #include "arm64/lithium-codegen-arm64.h"
@@ -2570,3 +2572,5 @@
 
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm64/lithium-codegen-arm64.cc	2014-04-18 23:48:25.000000000 +0800
+++ src/arm64/lithium-codegen-arm64.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM64
+
 #include "arm64/lithium-codegen-arm64.h"
 #include "arm64/lithium-gap-resolver-arm64.h"
 #include "code-stubs.h"
@@ -5936,3 +5938,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/arm64/lithium-gap-resolver-arm64.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/arm64/lithium-gap-resolver-arm64.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,8 @@
 
 #include "v8.h"
 
+#if V8_TARGET_ARCH_ARM64
+
 #include "arm64/lithium-gap-resolver-arm64.h"
 #include "arm64/lithium-codegen-arm64.h"
 
@@ -332,3 +334,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-freebsd.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-freebsd.cc	2014-04-19 00:21:30.000000000 +0800
@@ -28,6 +28,10 @@
 // Platform-specific code for FreeBSD goes here. For the POSIX-compatible
 // parts, the implementation is in platform-posix.cc.
 
+#include <osconfig.h>
+
+#ifdef FreeBSD
+
 #include <pthread.h>
 #include <semaphore.h>
 #include <signal.h>
@@ -330,3 +334,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-linux.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-linux.cc	2014-04-19 00:21:30.000000000 +0800
@@ -28,6 +28,10 @@
 // Platform-specific code for Linux goes here. For the POSIX-compatible
 // parts, the implementation is in platform-posix.cc.
 
+#include <osconfig.h>
+
+#ifdef Linux
+
 #include <pthread.h>
 #include <semaphore.h>
 #include <signal.h>
@@ -456,3 +460,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-macos.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-macos.cc	2014-04-19 00:21:30.000000000 +0800
@@ -28,6 +28,10 @@
 // Platform-specific code for MacOS goes here. For the POSIX-compatible
 // parts, the implementation is in platform-posix.cc.
 
+#include <osconfig.h>
+
+#ifdef MacOS
+
 #include <dlfcn.h>
 #include <unistd.h>
 #include <sys/mman.h>
@@ -333,3 +337,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-openbsd.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-openbsd.cc	2014-04-19 00:21:30.000000000 +0800
@@ -28,6 +28,10 @@
 // Platform-specific code for OpenBSD and NetBSD goes here. For the
 // POSIX-compatible parts, the implementation is in platform-posix.cc.
 
+#include <osconfig.h>
+
+#ifdef OpenBSD
+
 #include <pthread.h>
 #include <semaphore.h>
 #include <signal.h>
@@ -362,3 +366,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-posix.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-posix.cc	2014-04-19 00:21:30.000000000 +0800
@@ -29,6 +29,10 @@
 // own, but contains the parts which are the same across the POSIX platforms
 // Linux, MacOS, FreeBSD, OpenBSD, NetBSD and QNX.
 
+#include <osconfig.h>
+
+#ifndef Windows
+
 #include <dlfcn.h>
 #include <pthread.h>
 #if defined(__DragonFly__) || defined(__FreeBSD__) || defined(__OpenBSD__)
@@ -268,12 +272,12 @@
   return static_cast<size_t>(sysconf(_SC_PAGESIZE));
 }
 
-
+#if 0
 void OS::Sleep(int milliseconds) {
   useconds_t ms = static_cast<useconds_t>(milliseconds);
   usleep(1000 * ms);
 }
-
+#endif
 
 void OS::Abort() {
   if (FLAG_hard_abort) {
@@ -582,7 +586,7 @@
   strncpy(dest.start(), src, n);
 }
 
-
+#if 0
 // ----------------------------------------------------------------------------
 // POSIX thread support.
 //
@@ -816,6 +820,8 @@
   ASSERT_EQ(0, result);
   USE(result);
 }
-
+#endif
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-qnx.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-qnx.cc	2014-04-19 00:21:30.000000000 +0800
@@ -28,6 +28,10 @@
 // Platform-specific code for QNX goes here. For the POSIX-compatible
 // parts the implementation is in platform-posix.cc.
 
+#include <osconfig.h>
+
+#ifdef Qnx
+
 #include <pthread.h>
 #include <semaphore.h>
 #include <signal.h>
@@ -399,3 +403,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-solaris.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-solaris.cc	2014-04-19 00:21:30.000000000 +0800
@@ -28,6 +28,10 @@
 // Platform-specific code for Solaris 10 goes here. For the POSIX-compatible
 // parts, the implementation is in platform-posix.cc.
 
+#include <osconfig.h>
+
+#ifdef Solaris
+
 #ifdef __sparc
 # error "V8 does not support the SPARC CPU architecture."
 #endif
@@ -342,3 +346,5 @@
 }
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform-win32.cc	2014-04-12 13:42:03.000000000 +0800
+++ src/platform-win32.cc	2014-04-19 00:21:30.000000000 +0800
@@ -27,6 +27,10 @@
 
 // Platform-specific code for Win32.
 
+#include <osconfig.h>
+
+#ifdef Windows
+
 // Secure API functions are not available using MinGW with msvcrt.dll
 // on Windows XP. Make sure MINGW_HAS_SECURE_API is not defined to
 // disable definition of secure API functions in standard headers that
@@ -925,11 +929,11 @@
   VirtualProtect(address, size, PAGE_NOACCESS, &oldprotect);
 }
 
-
+#if 0
 void OS::Sleep(int milliseconds) {
   ::Sleep(milliseconds);
 }
-
+#endif
 
 void OS::Abort() {
   if (FLAG_hard_abort) {
@@ -1416,7 +1420,7 @@
   return false;
 }
 
-
+#if 0
 // ----------------------------------------------------------------------------
 // Win32 thread support.
 
@@ -1518,5 +1522,8 @@
 void Thread::YieldCPU() {
   Sleep(0);
 }
+#endif
 
 } }  // namespace v8::internal
+
+#endif
--- /Users/lion/Downloads/source/js/v8/src/platform.h	2014-04-12 13:42:03.000000000 +0800
+++ src/platform.h	2014-04-19 00:21:30.000000000 +0800
@@ -108,6 +108,8 @@
 // ----------------------------------------------------------------------------
 // Fast TLS support
 
+#define V8_NO_FAST_TLS
+
 #ifndef V8_NO_FAST_TLS
 
 #if defined(_MSC_VER) && V8_HOST_ARCH_IA32
